# Obfuscated with PyObfuscate
# https://www.github.com/htr-tech
# Time : Sat May  4 06:57:43 2024
# -------------------------------
_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b'='))